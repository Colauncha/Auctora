"""Migration

Revision ID: 5a259e6fbf34
Revises: 582b687a4f7a
Create Date: 2025-02-14 15:20:39.837221

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5a259e6fbf34'
down_revision: Union[str, None] = '582b687a4f7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='auctora_dev'
    )
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('hash_password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('wallet', sa.Float(), nullable=True),
    sa.Column('available_balance', sa.Float(), nullable=True),
    sa.Column('auctioned_amount', sa.Float(), nullable=True),
    sa.Column('role', postgresql.ENUM('CLIENT', 'ADMIN', name='userroles', schema='auctora_dev'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_users_email'), 'users', ['email'], unique=True, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_users_id'), 'users', ['id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_users_username'), 'users', ['username'], unique=True, schema='auctora_dev')
    op.create_table('auctions',
    sa.Column('users_id', sa.UUID(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=False),
    sa.Column('start_price', sa.Float(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=False),
    sa.Column('buy_now', sa.Boolean(), nullable=False),
    sa.Column('buy_now_price', sa.Float(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'COMPLETED', 'CANCLED', 'PENDING', name='auction_status', schema='auctora_dev'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['users_id'], ['auctora_dev.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index('ix_auctions_status_end_date', 'auctions', ['status', 'end_date'], unique=False, schema='auctora_dev')
    op.create_index('ix_auctions_status_start_date', 'auctions', ['status', 'start_date'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_auctions_end_date'), 'auctions', ['end_date'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_auctions_id'), 'auctions', ['id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_auctions_start_date'), 'auctions', ['start_date'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_auctions_status'), 'auctions', ['status'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_auctions_users_id'), 'auctions', ['users_id'], unique=False, schema='auctora_dev')
    op.create_table('notifications',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auctora_dev.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_notifications_id'), 'notifications', ['id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_notifications_user_id'), 'notifications', ['user_id'], unique=False, schema='auctora_dev')
    op.create_table('subcategories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['auctora_dev.categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_subcategories_name'), 'subcategories', ['name'], unique=False, schema='auctora_dev')
    op.create_table('wallet_transactions',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('reference_id', sa.String(), nullable=True),
    sa.Column('transaction_type', postgresql.ENUM('FUNDING', 'WITHDRAWAL', 'CREDIT', 'DEBIT', name='transaction_types', schema='auctora_dev'), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', name='transaction_status', schema='auctora_dev'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auctora_dev.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_wallet_transactions_id'), 'wallet_transactions', ['id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_wallet_transactions_reference_id'), 'wallet_transactions', ['reference_id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_wallet_transactions_user_id'), 'wallet_transactions', ['user_id'], unique=False, schema='auctora_dev')
    op.create_table('Bids',
    sa.Column('auction_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['auction_id'], ['auctora_dev.auctions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['auctora_dev.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_Bids_auction_id'), 'Bids', ['auction_id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_Bids_id'), 'Bids', ['id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_Bids_user_id'), 'Bids', ['user_id'], unique=False, schema='auctora_dev')
    op.create_table('auction_participants',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('auction_id', sa.UUID(), nullable=True),
    sa.Column('participant_email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['auction_id'], ['auctora_dev.auctions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_auction_participants_auction_id'), 'auction_participants', ['auction_id'], unique=False, schema='auctora_dev')
    op.create_index(op.f('ix_auctora_dev_auction_participants_id'), 'auction_participants', ['id'], unique=False, schema='auctora_dev')
    op.create_table('items',
    sa.Column('users_id', sa.UUID(), nullable=False),
    sa.Column('auction_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('image_link', sa.JSON(), nullable=True),
    sa.Column('image_link_2', sa.JSON(), nullable=True),
    sa.Column('image_link_3', sa.JSON(), nullable=True),
    sa.Column('image_link_4', sa.JSON(), nullable=True),
    sa.Column('image_link_5', sa.JSON(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('category_id', sa.String(), nullable=False),
    sa.Column('sub_category_id', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['auction_id'], ['auctora_dev.auctions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['auctora_dev.categories.id'], ),
    sa.ForeignKeyConstraint(['sub_category_id'], ['auctora_dev.subcategories.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['auctora_dev.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='auctora_dev'
    )
    op.create_index(op.f('ix_auctora_dev_items_id'), 'items', ['id'], unique=False, schema='auctora_dev')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_auctora_dev_items_id'), table_name='items', schema='auctora_dev')
    op.drop_table('items', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auction_participants_id'), table_name='auction_participants', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auction_participants_auction_id'), table_name='auction_participants', schema='auctora_dev')
    op.drop_table('auction_participants', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_Bids_user_id'), table_name='Bids', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_Bids_id'), table_name='Bids', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_Bids_auction_id'), table_name='Bids', schema='auctora_dev')
    op.drop_table('Bids', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_wallet_transactions_user_id'), table_name='wallet_transactions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_wallet_transactions_reference_id'), table_name='wallet_transactions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_wallet_transactions_id'), table_name='wallet_transactions', schema='auctora_dev')
    op.drop_table('wallet_transactions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_subcategories_name'), table_name='subcategories', schema='auctora_dev')
    op.drop_table('subcategories', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_notifications_user_id'), table_name='notifications', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_notifications_id'), table_name='notifications', schema='auctora_dev')
    op.drop_table('notifications', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auctions_users_id'), table_name='auctions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auctions_status'), table_name='auctions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auctions_start_date'), table_name='auctions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auctions_id'), table_name='auctions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_auctions_end_date'), table_name='auctions', schema='auctora_dev')
    op.drop_index('ix_auctions_status_start_date', table_name='auctions', schema='auctora_dev')
    op.drop_index('ix_auctions_status_end_date', table_name='auctions', schema='auctora_dev')
    op.drop_table('auctions', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_users_username'), table_name='users', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_users_id'), table_name='users', schema='auctora_dev')
    op.drop_index(op.f('ix_auctora_dev_users_email'), table_name='users', schema='auctora_dev')
    op.drop_table('users', schema='auctora_dev')
    op.drop_table('categories', schema='auctora_dev')
    # ### end Alembic commands ###
